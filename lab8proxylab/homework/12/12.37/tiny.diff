--- tinyOrigin.c	2022-01-17 16:43:48.303048334 +0000
+++ tiny.c	2022-01-18 06:19:00.729105382 +0000
@@ -7,7 +7,7 @@
  *   - Fixed sprintf() aliasing issue in serve_static(), and clienterror().
  */
 #include "csapp.h"
-
+#include "pool.h"
 void doit(int fd);
 void read_requesthdrs(rio_t *rp);
 int parse_uri(char *uri, char *filename, char *cgiargs);
@@ -19,24 +19,28 @@
 int main(int argc, char **argv)
 {
     int listenfd, connfd;
-    char hostname[MAXLINE], port[MAXLINE];
     socklen_t clientlen;
     struct sockaddr_storage clientaddr;
-
+    char hostname[MAXLINE], port[MAXLINE];
     /* Check command line args */
     if (argc != 2) {
         fprintf(stderr, "usage: %s <port>\n", argv[0]);
         exit(1);
     }
-
+    static pool pool;
     listenfd = Open_listenfd(argv[1]);
+    init_pool(listenfd, &pool);
     while (1) {
-        clientlen = sizeof(clientaddr);
-        connfd = Accept(listenfd, (SA *)&clientaddr, &clientlen);  // line:netp:tiny:accept
-        Getnameinfo((SA *)&clientaddr, clientlen, hostname, MAXLINE, port, MAXLINE, 0);
-        printf("Accepted connection from (%s, %s)\n", hostname, port);
-        doit(connfd);   // line:netp:tiny:doit
-        Close(connfd);  // line:netp:tiny:close
+        pool.ready_set = pool.read_set;
+        pool.nready = Select(pool.maxfd + 1, &pool.ready_set, NULL, NULL, NULL);
+        if (FD_ISSET(listenfd, &pool.ready_set)) {
+            clientlen = sizeof(struct sockaddr_storage);
+            connfd = Accept(listenfd, (SA *)&clientaddr, &clientlen);
+            Getnameinfo((SA *)&clientaddr, clientlen, hostname, MAXLINE, port, MAXLINE, 0);
+            printf("Accepted connection from (%s, %s)\n", hostname, port);
+            add_client(connfd, &pool);
+        }
+        check_clients(&pool);
     }
 }
 /* $end tinymain */
